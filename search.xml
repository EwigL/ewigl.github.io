<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Steam手动添加愿望单</title>
    <url>/Steam%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0%E6%84%BF%E6%9C%9B%E5%8D%95/</url>
    <content><![CDATA[<ul>
<li>在浏览器无法显示锁区游戏时手动添加任意游戏至愿望单<a id="more"></a>

</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">javascript:AddToWishlist( AppID,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area_success&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area_fail&#x27;</span>,</span><br><span class="line"><span class="string">&quot;1_4_4__145_2&quot;</span>,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area2&#x27;</span> );</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>生活娱乐</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>偶然发现的某盘&quot;漏洞&quot;</title>
    <url>/%E5%81%B6%E7%84%B6%E5%8F%91%E7%8E%B0%E7%9A%84%E6%9F%90%E7%9B%98%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<ul>
<li><p>偶然得到一个网盘链接但是没有密码<a id="more"></a><br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/b996dcd03a4f2276be76ab40e40bcd1b.png" alt="0"></p>
</li>
<li><p>习惯性的 f12，一眼就看到一个 fileview…<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/6afe06a1da032208d16e09e7177c0f6c.png" alt="3"></p>
</li>
<li><p>展开，发现了一个 id 为 folder 的元素,而且还有两个链接<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/a3d5f94b53d18a799a0b579e9ef0e7f4.png" alt="1"><br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/cec3baacb1dc2432fdc59f5589d84a60.png" alt="666"></p>
</li>
<li><p>点击链接即可访问子文件夹，无需密码？<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/321c9bc11c9c32f9dd69713423abc2a5.png" alt="2"><br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/cec3baacb1dc2432fdc59f5589d84a60.png" alt="666"></p>
</li>
<li><p>限制：只可以访问子文件夹以及子文件夹中的文件,无法访问分享根目录文件。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>不正经研究</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
        <tag>网安</tag>
      </tags>
  </entry>
  <entry>
    <title>Via浏览器自定义主页</title>
    <url>/Via%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A1%B5/</url>
    <content><![CDATA[<p>&emsp;&emsp;简单的主页动画</p>
<ul>
<li>自定义logo:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">id</span>=<span class="string">&quot;Licht&quot;</span>&gt;</span>Licht<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>自定义css:<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">256px</span>;</span><br><span class="line">        <span class="attribute">animation</span>: fadeIn <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#Licht</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: gray;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">        <span class="attribute">animation</span>: a_scale <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.search_bar</span> &#123;</span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="attribute">animation</span>: a_expand <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.title</span>,</span><br><span class="line">    <span class="selector-class">.url</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: gray;</span><br><span class="line">        <span class="attribute">animation</span>: a_scale <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.search</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#search_submit</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> a_expand &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">25%</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> a_scale &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> fadeIn &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li>
<li>效果<center>
<iframe src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f1bf88d7-10e7-4626-ba2d-81231d643da5.mp4" frameborder="0" height="533"></iframe>
</center></li>
</ul>
]]></content>
      <categories>
        <category>不正经研究</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_mouseover与mouseenter</title>
    <url>/%E5%89%8D%E7%AB%AF-mouseover%E4%B8%8Emouseenter/</url>
    <content><![CDATA[<ul>
<li><p>mouseover(鼠标覆盖)与mouseenter(鼠标进入)  </p>
<a id="more"></a>

<p>&emsp;&emsp;mouseenter不会冒泡。它不会被它本身的子元素的状态影响到。<br>&emsp;&emsp;mouseover会被它的子元素影响到,在触发子元素的时候,mouseover会冒泡触发它的父元素。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_this重定向</title>
    <url>/%E5%89%8D%E7%AB%AF-this%E9%87%8D%E5%AE%9A%E5%90%91/</url>
    <content><![CDATA[<ul>
<li>call();apply();bind:  this重定向函数  <a id="more"></a>
<ul>
<li>第一个参数均为this指向对象</li>
<li>call()与apply()均立即调用，bind 返回的是一个新的函数</li>
<li>call()原函数参数后移一位，apply()原函数参数作为数组传入，bind()除返回值是函数以外，参数与 call()一样  </li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_原生JS跨浏览器兼容实例</title>
    <url>/%E5%89%8D%E7%AB%AF-%E5%8E%9F%E7%94%9FJS%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<ul>
<li>获取事件对象属性  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="keyword">var</span> witch = e.witch || e.keyCode || charCode;</span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>阻止冒泡  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">e.stopPropagation ? </span><br><span class="line">  e.stopPropagation() : </span><br><span class="line">  e.cancelBubble = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></li>
<li>监听器操作：  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 跨浏览器兼容添加事件监听器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEvent</span>(<span class="params">node, eventType, funcName</span>) </span>&#123;</span><br><span class="line">  node.addEventListener ?</span><br><span class="line">    node.addEventListener(eventType, funcName, <span class="literal">false</span>) :</span><br><span class="line">    node.attachEvent(<span class="string">&quot;on&quot;</span> + eventType, funcName);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 跨浏览器兼容移除事件监听器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeEvent</span>(<span class="params">node, eventType, funcName</span>) </span>&#123;</span><br><span class="line">  node.removeEventListener ?</span><br><span class="line">    node.removeEventListener(eventType, funcName) :</span><br><span class="line">    node.detachEvent(<span class="string">&quot;on&quot;</span> + eventType, funcName);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_文档碎片</title>
    <url>/%E5%89%8D%E7%AB%AF-%E6%96%87%E6%A1%A3%E7%A2%8E%E7%89%87/</url>
    <content><![CDATA[<ul>
<li>文档碎片操作：减少重排，提高效率  <a id="more"></a>  

</li>
</ul>
<p>&emsp;&emsp;将需要添加的大量元素先添加到文档碎片中，再将文档碎片添加到需要插入的位置，大大减少DOM操作，提高性能。<br> 一般：<br>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(newDiv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  改进：<br>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> node = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    node.appendChild(newDiv);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(node);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_定时器</title>
    <url>/%E5%89%8D%E7%AB%AF-%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
    <content><![CDATA[<ul>
<li>setTimeout( );setInterval( ):设置定时器  <a id="more"></a>
<ul>
<li>clearTimeout( );clearInterval( )：清除定时器</li>
<li>参数：(函数(名),延迟,函数参数顺延) </li>
<li>setTimeout：执行后即停止</li>
<li>setInterval：循环执行</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC简单使用</title>
    <url>/JDBC%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ul>
<li>使用jdbc连接MySQL数据库的简单(基础)步骤：<a id="more"></a></li>
<li>新建数据库utils类<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span>   Connection con;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            con = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost/table?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC&quot;</span>, <span class="string">&quot;username&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span>  Connection   <span class="title">getConnect</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>    con;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>自定义查询<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getInfo</span><span class="params">(String... columns)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">// 建立连接</span></span><br><span class="line">        Connection conn = JdbcUtils.getConn();</span><br><span class="line">        <span class="comment">// 构造sql语句</span></span><br><span class="line">        String sql = <span class="string">&quot; select  *  from  table&quot;</span>;</span><br><span class="line">        <span class="comment">// 预编译sql语句</span></span><br><span class="line">        PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line">        <span class="comment">// 执行语句 将查询结果存入result中</span></span><br><span class="line">        ResultSet result = preparedStatement.executeQuery();</span><br><span class="line">        <span class="comment">// 通过遍历输出查询到的数据</span></span><br><span class="line">        <span class="keyword">while</span> (result.next()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columns.length; i++) &#123;</span><br><span class="line">                System.out.print(result.getObject(columns[i]) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
主函数调用格式：  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">classname.getInfo(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;key3&quot;</span>,<span class="string">&quot;key4&quot;</span>);</span><br></pre></td></tr></table></figure></li>
<li>自定义插入<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnect();</span><br><span class="line">        String sql = <span class="string">&quot;insert  into  table values(?,?,?,?)&quot;</span>;</span><br><span class="line">        PreparedStatement preparedStatement = con.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setObject(<span class="number">1</span>, obj.getId());</span><br><span class="line">        preparedStatement.setObject(<span class="number">2</span>, obj.getEmpName());</span><br><span class="line">        preparedStatement.setObject(<span class="number">3</span>, obj.getDept_code());</span><br><span class="line">        preparedStatement.setObject(<span class="number">4</span>, obj.getHire_date());</span><br><span class="line">        preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(<span class="string">&quot;插入数据成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>自定义删除  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteObj</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnect();</span><br><span class="line">        String sql = <span class="string">&quot;delete from table where id = &quot;</span> + id;</span><br><span class="line">        PreparedStatement preparedStatement = con.prepareStatement(sql);</span><br><span class="line">        preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(<span class="string">&quot;删除成功。&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>自定义更改<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">altObj</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnect();</span><br><span class="line">        System.out</span><br><span class="line">                .println(<span class="string">&quot;输入要更改的键,可选: key1,key2,key3,key4,&quot;</span>);</span><br><span class="line">        String column = sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;将修改&quot;</span> + column + <span class="string">&quot;为:&quot;</span>);</span><br><span class="line">        String alt = sc.next();</span><br><span class="line">        String sql = <span class="string">&quot;update table set &quot;</span> + column + <span class="string">&quot; = ? where id = ?&quot;</span>;</span><br><span class="line">        PreparedStatement preparedStatement = con.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setObject(<span class="number">1</span>, alt);</span><br><span class="line">        preparedStatement.setObject(<span class="number">2</span>, id);</span><br><span class="line">        preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(<span class="string">&quot;更改成功。&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Scanner中文输入乱码问题</title>
    <url>/JavaScanner%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>&emsp;&emsp;最近在做Java项目时遇到了一个问题：在使用JDBC向MySQL数据库中插入数据时中文值会变成乱码，但是从数据库中查询数据时中文显示正常。因此乱码产生原因应该在输入过程。<a id="more"></a><br>&emsp;&emsp;推测原因是使用Scanner类创建的输入流输入中文时编码转换产生错误。<br>示例代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String sc_str = sc.next();</span><br><span class="line">        String def_str = <span class="string">&quot;你好。&quot;</span>;</span><br><span class="line">        System.out.println(sc_str + def_str);</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>示例结果如下<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2021/01/10/965cc00b946b92e2cd6edda6bd44f6b5.png" alt="示例结果"><br>&emsp;&emsp;可以看到输入的中文变成了乱码，但是预定义的字符串可以正常输出，因此确定是输入时编码存在问题。键盘的输入流的默认格式是GBK格式，控制台的字符编码以及文件编码均为UTF-8，因此造成了乱码。<br>&emsp;&emsp;解决：更改代码<code>Scanner sc = new Scanner(System.in);</code>在实例化Scanner对象时指定编码类型为GBK，即<code>Scanner sc = new Scanner(System.in, &quot;GBK&quot;);</code>。<br>&emsp;&emsp;更改后程序中文输入即可正常编码：<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2021/01/10/1196c7ba8fefab51f1ced83e211d0b27.png" alt="更改后"><br>&emsp;&emsp;备注：更改IDE为IntelliJ IDEA时无此问题，果然还是IDEA省事。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>V2Ray相关</title>
    <url>/V2Ray/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码不对。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="e813f1477b5412c636e691e9c65b61f657faf8dff30de66ea68e6bf2018a10f3">bb19e3588e7440443573af731f63596e23e45afaadfcbdf14ee0d1a56dcac13f7a96fbc7586ba0a9b05c4a9bb33935493e630c8db45ea4b6d6b1cc478217351f400019f5d70355ccf9c245e9c10708a5662236b2cf531962b2067ae8459ad53f7da64dd2cd0dc8553d9c875603d2dc4db6537c25504623385aa8e53cd9b33daadd69b664292f3ea6759ceb3075536354092b13fc279878593170075afa0503ca86ae3104594394932e314546a7fa8fa9f728925c230205eede77d8968a41df3b2f29cf353a5fa033d10856cec33bf09fdc2fc1491b9d2613e4dde00e6dfed5317c775b25e623baf7ca827e26ce6be4fc5f3204fc6bffb7f84fc240e303eeb41def10e0638db2af464ea0297b669b99d51c99cd7450806cc92c1c638a2cf993e78bd331f11a70ff8affc95f474f32296609ce709c7edf29412adec30b0c47d498a79a272fe9536cf6c3faa6a6f539fddf57572f0c2c1125100ddc28aacd7b19c8e73378e49ed2f3620a62f24a1b0c00ea39b0dc708d8599fd979e95c20a5e3ba772671d93fcae3f04c77ace225dff948288cdd3d778e470c64da8b757b057700e4d7b89be5af69d0f528f346f24fd249a41d49543c695dbf28ef09e82aea2ffe50f3fdda3e26e2a3f3a19ca9139671092a4bc14db5c99deda3145729b618a18057ff32ef8c8f030c0719fff5c5253a920df9d6bb5798179d64924eaffc28dd9ee20395e49c4c4cd75336f021c291f2c47a3d81999447d29f7112c36265607c0253fabd9800bc8a84a61db97653dddb17b97b9803b971af4e0fd30e4f4fe37b317d84c2c380f2ed2ae75691eb652690a5cccdd88b1a33a8549a1fea9226b3ba22c3bd0277558d6cbb00bab80caf573700b4c294a4bfbd2f8df80428fbef9440e79b64033f856b36d3065a8ea10b25a90285fc8393d886f852676a8e8255090323f90883d58ec641178b50ad5ee827d591450e85e38ea17d3ee84586a4ce1eb232ebab542d2bb45bfac2fe1386a3d7097be6d20e6b68e758b4ce33ebffac1c13cbc3a475e3478acadb7e0573c083089d47ab3838ab89cf521a9f4b36aff6afedc035ddf040754d278599d812e71210968113538542c7c45b83e4dfbe20f11deee919892ad08dd0d9f669f3ddf93652e2896f9e73aed3a159c00b1b2e60a4b3e82fec33a96831d0881fd3302aaea6b56fd6f54049b8cd0da7850b5452562db4ea650a5a56f087965ad39cb2b7e9decfdd835b34acbec6480ea062accb3db301c2e1332bfb5efbae53b453bd32bf87c24d70888cba73e1b75d009a86f1421438ef771f89bacd40905e5f2290fc49276fdbf2d682d0f57e1e6684284e9d7f64d0d71535926cafece56fc0690f0ee3a42369d9a105042caa1de0bf5eb1f73e5accbe74b75c4ad56a62cdb2951d30e2ab96f2c6d8717574f8242593cc5da200672a584ef986e0dfad4d055b5b078ac3bd5a2e7e83c4a555949f5b1bf17219f8d81bcd3eb415908acddba3706c1150e3f37f77db08509a2eb85b35f39aea868ca382962c04a4c81723270aed8d14bd319ec39d38bd8742e333a29870650bb0d5eda0b8cd81075ce40bd6b3b17446e195e566f9b149b55c98c9bd3f33d503065a93b70f1fe1ffd05aa088e26d1abc17f537d0dd5f03c75e8cf260791ea39864635b4d049ac90e68da1bbd05558a4c455172a947300cab4203fd19b2e16dae9a236c085fdc310d7b4565ad0316c96a97684634ff40e4d3074b6f4834c982f45f1989dec8deb7bd959666eecf8c0ee68809532164e03fb851681b5ecdded47d3110149e9abf705c8606896aa3a83c90924a682d366393f1cc0bb9a8487532deb99c5071620263411711b8874fddc9091e3d50c212e96d5d551f89f1bce24529b6f462639c8310e273e7c1ce70dc807f5905f11c3178432beee166dfec55f7eb3d498011e3e1f33008b2b72b44b977d8fefbdd622522c12c5f8a8cce412df29a2096f1939811a109be70068d112eadf001f8120a7555b0ed3bfc0a5230fd9a2bf4790e5d7021a33abf5443a401c1cbb3fe10ac615f2ae09b8980f529eb9aa30252b1ad7617cb54ff55c6604d67a8a896994d2791d26e3d5bebf79906af5c4fa6b0827118cd9eb13a1cb6ac9a351e4f7caa55aa0581c2d9f034f3a434154e5d69dfc08aacc80007147600cbc704078a8542b04f58aabdb283353d2ceba382cf66497a1b1d80fd8c985f1575cd68d29151cfefad0302c6b384d8ba3cc335b0f46522725794c62a1d3c9a43f704311d82f3bfd058bf130b464729d72d6776d9fa759b91f4305402d8229767a95e276a24aa70aa8fc50992bbc00652f7917db5e4ff2f2bff3046a720bb35eb676f329db99eaa42f98c1f74c4422358d63d96019731abd5acb06d30a779bc2aa6ec282542567f45624292d2ada70bf9ca6cf00912fd9281adb2fb408bb80f96188d1be4c73826e66836965185e9b9e1302791d1977b760b24379241129b8489a4aec9782e939091135310f00c55791bca6a9970b575a311d8e0a2e23c284c82c731ebc359693d0c10fd9660d3bf2699d905bec2d033254ae93616dee55c0bc1c43086e1c710e1ca5d542cff8d77cbae4d5f522e5e246eea3f893465f2b0a6279c69b881d05625e5aeeb88461d6ece25b27b5504e9242330c200970be6e7a5da3e9c435f54dad09c83827a12a97ee1535c367647e24c89e837453832e18a8b6af0f50ee5421dee300a9842ea65cb0f916123d8de5c46ef30819c25b1f35f8e42b74d927ae5e1364b7c08640abb69025b416e271b6bf320264d2efc423a543ccf0c042112a48f343414a2fe74f09ae45a88204b5a8828d61df282b53f3ca0e6dc3ab33ec63a5636a7f81a9373de6538a8cbca4c38f4e1e641612c979506fdf99bd4def7af78f266a4aab9c8a685e90242ad1adf4d176e449d5da3edd00cc3dd52e3e20adf699c2a1239b8fbb583dfa83ba743d4eb13481a3d9df24e429657e323f875e446d0eb835b610eb38fb9926c5d0804f36fe76ab9cd60f9b752860ef5334f0e860978b67ba421b838dbc778e40e6f95ef4f7f0c633f16950e36ed746329e592d7d781b8f75749fcf28f2afca998877db3b31990f22fb2fbb82cb8d67e1310ed7eac9c084705e224069bd1bd66f30d750313275660a97a74c6afc8e0ae3744d5006cf01000944c624ecda205a68b7301ba16e3634a96f4917dc2bf799019c021e3f30d915a05a058dadef47696cdaf35a74aa2db098856681eed4796e09a496f28407e03d9486666ce8ccb73941c52fa9d3ae883ae0040a79f42de76be539bfdcbb6de439fc1d771d11ee704b50ebdb217636ab9316eb0c9530b4c3ff60df8bc32749cca7079b9ad32486b65ddccca85b2983e0a73c9e2870af65c4ff14d873e8e4ba4c2ffad3b6c5b27030a96b095b42c7b4f529cbf92004a3ced22aa80e546ba31a8cd890093f48650f5b841ad14b39a7ab89497b33c754b0ad7394371a0785d2e08a094e1af933dc6d6188ceb99b04f3a34e70713f51752ea6eb022fcf63b24a086e0baf3864b038c903f05dd67e2cf01b590066df1d507cdd14ba48a66d41e169d696544a1722efa4dcc70443be50208556411f5b0239f71732881dbef775da3771558f3209a0d1a90454d47b1d45215f42d508733374ac7268436cec18807e15eeb1f9990ea853b9806ddb0f63dd30075029d353630e57c81be3103ee71db7d8269eb31e6fac4bce65add0eee15fb1a8bd981c15f2b0324b134f81604bdc5d913dfcd367572cf42ff18b85b9aa953fbd0c41402c1c147fdbd2de544ad5dedf8d22b1acce95c0f24ad66ad88d19995ea1b6d4584e2e37d4da</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">密码？</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>不正经研究</category>
      </categories>
      <tags>
        <tag>V2Ray</tag>
        <tag>Encrypted</tag>
      </tags>
  </entry>
</search>

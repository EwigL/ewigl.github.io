<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Steam手动添加愿望单</title>
    <url>/Steam%E6%89%8B%E5%8A%A8%E6%B7%BB%E5%8A%A0%E6%84%BF%E6%9C%9B%E5%8D%95/</url>
    <content><![CDATA[<ul>
<li>在浏览器无法显示锁区游戏时手动添加任意游戏至愿望单<a id="more"></a>

</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">javascript:AddToWishlist( AppID,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area_success&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area_fail&#x27;</span>,</span><br><span class="line"><span class="string">&quot;1_4_4__145_2&quot;</span>,</span><br><span class="line"><span class="string">&#x27;add_to_wishlist_area2&#x27;</span> );</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>生活娱乐</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>偶然发现的某盘&quot;漏洞&quot;</title>
    <url>/%E5%81%B6%E7%84%B6%E5%8F%91%E7%8E%B0%E7%9A%84%E6%9F%90%E7%9B%98%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<ul>
<li><p>偶然得到一个网盘链接但是没有密码<a id="more"></a><br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/b996dcd03a4f2276be76ab40e40bcd1b.png" alt="0"></p>
</li>
<li><p>习惯性的 f12，一眼就看到一个 fileview…<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/6afe06a1da032208d16e09e7177c0f6c.png" alt="3"></p>
</li>
<li><p>展开，发现了一个 id 为 folder 的元素,而且还有两个链接<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/a3d5f94b53d18a799a0b579e9ef0e7f4.png" alt="1"><br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/cec3baacb1dc2432fdc59f5589d84a60.png" alt="666"></p>
</li>
<li><p>点击链接即可访问子文件夹，无需密码？<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/321c9bc11c9c32f9dd69713423abc2a5.png" alt="2"><br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/cec3baacb1dc2432fdc59f5589d84a60.png" alt="666"></p>
</li>
<li><p>限制：只可以访问子文件夹以及子文件夹中的文件,无法访问分享根目录文件。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>不正经研究</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
        <tag>网安</tag>
      </tags>
  </entry>
  <entry>
    <title>Via浏览器自定义主页</title>
    <url>/Via%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A1%B5/</url>
    <content><![CDATA[<p>&emsp;&emsp;简单的主页动画</p>
<ul>
<li>自定义logo:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">id</span>=<span class="string">&quot;Licht&quot;</span>&gt;</span>Licht<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>自定义css:<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">256px</span>;</span><br><span class="line">        <span class="attribute">animation</span>: fadeIn <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#Licht</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: gray;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">        <span class="attribute">animation</span>: a_scale <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.search_bar</span> &#123;</span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">64px</span>;</span><br><span class="line">        <span class="attribute">animation</span>: a_expand <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.title</span>,</span><br><span class="line">    <span class="selector-class">.url</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: gray;</span><br><span class="line">        <span class="attribute">animation</span>: a_scale <span class="number">0.8s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.search</span> &#123;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#search_submit</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> a_expand &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">25%</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> a_scale &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> fadeIn &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        100% &#123;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li>
<li>效果<center>
<iframe src="https://vkceyugu.cdn.bspapp.com/VKCEYUGU-imgbed/f1bf88d7-10e7-4626-ba2d-81231d643da5.mp4" frameborder="0" height="533"></iframe>
</center></li>
</ul>
]]></content>
      <categories>
        <category>不正经研究</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_mouseover与mouseenter</title>
    <url>/%E5%89%8D%E7%AB%AF-mouseover%E4%B8%8Emouseenter/</url>
    <content><![CDATA[<ul>
<li><p>mouseover(鼠标覆盖)与mouseenter(鼠标进入)  </p>
<a id="more"></a>

<p>&emsp;&emsp;mouseenter不会冒泡。它不会被它本身的子元素的状态影响到。<br>&emsp;&emsp;mouseover会被它的子元素影响到,在触发子元素的时候,mouseover会冒泡触发它的父元素。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_this重定向</title>
    <url>/%E5%89%8D%E7%AB%AF-this%E9%87%8D%E5%AE%9A%E5%90%91/</url>
    <content><![CDATA[<ul>
<li>call();apply();bind:  this重定向函数  <a id="more"></a>
<ul>
<li>第一个参数均为this指向对象</li>
<li>call()与apply()均立即调用，bind 返回的是一个新的函数</li>
<li>call()原函数参数后移一位，apply()原函数参数作为数组传入，bind()除返回值是函数以外，参数与 call()一样  </li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_原生JS跨浏览器兼容实例</title>
    <url>/%E5%89%8D%E7%AB%AF-%E5%8E%9F%E7%94%9FJS%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<ul>
<li>获取事件对象属性  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="keyword">var</span> witch = e.witch || e.keyCode || charCode;</span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li>阻止冒泡  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">e.stopPropagation ? </span><br><span class="line">  e.stopPropagation() : </span><br><span class="line">  e.cancelBubble = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></li>
<li>监听器操作：  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 跨浏览器兼容添加事件监听器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEvent</span>(<span class="params">node, eventType, funcName</span>) </span>&#123;</span><br><span class="line">  node.addEventListener ?</span><br><span class="line">    node.addEventListener(eventType, funcName, <span class="literal">false</span>) :</span><br><span class="line">    node.attachEvent(<span class="string">&quot;on&quot;</span> + eventType, funcName);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// 跨浏览器兼容移除事件监听器</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeEvent</span>(<span class="params">node, eventType, funcName</span>) </span>&#123;</span><br><span class="line">  node.removeEventListener ?</span><br><span class="line">    node.removeEventListener(eventType, funcName) :</span><br><span class="line">    node.detachEvent(<span class="string">&quot;on&quot;</span> + eventType, funcName);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_文档碎片</title>
    <url>/%E5%89%8D%E7%AB%AF-%E6%96%87%E6%A1%A3%E7%A2%8E%E7%89%87/</url>
    <content><![CDATA[<ul>
<li>文档碎片操作：减少重排，提高效率  <a id="more"></a>  

</li>
</ul>
<p>&emsp;&emsp;将需要添加的大量元素先添加到文档碎片中，再将文档碎片添加到需要插入的位置，大大减少DOM操作，提高性能。<br> 一般：<br>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(newDiv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  改进：<br>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> node = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    node.appendChild(newDiv);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(node);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_定时器</title>
    <url>/%E5%89%8D%E7%AB%AF-%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
    <content><![CDATA[<ul>
<li>setTimeout( );setInterval( ):设置定时器  <a id="more"></a>
<ul>
<li>clearTimeout( );clearInterval( )：清除定时器</li>
<li>参数：(函数(名),延迟,函数参数顺延) </li>
<li>setTimeout：执行后即停止</li>
<li>setInterval：循环执行</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC简单使用</title>
    <url>/JDBC%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ul>
<li>使用jdbc连接MySQL数据库的简单(基础)步骤：<a id="more"></a></li>
<li>新建数据库utils类<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span>   Connection con;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            con = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://localhost/table?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC&quot;</span>, <span class="string">&quot;username&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span>  Connection   <span class="title">getConnect</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span>    con;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>自定义查询<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getInfo</span><span class="params">(String... columns)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">// 建立连接</span></span><br><span class="line">        Connection conn = JdbcUtils.getConn();</span><br><span class="line">        <span class="comment">// 构造sql语句</span></span><br><span class="line">        String sql = <span class="string">&quot; select  *  from  table&quot;</span>;</span><br><span class="line">        <span class="comment">// 预编译sql语句</span></span><br><span class="line">        PreparedStatement preparedStatement = conn.prepareStatement(sql);</span><br><span class="line">        <span class="comment">// 执行语句 将查询结果存入result中</span></span><br><span class="line">        ResultSet result = preparedStatement.executeQuery();</span><br><span class="line">        <span class="comment">// 通过遍历输出查询到的数据</span></span><br><span class="line">        <span class="keyword">while</span> (result.next()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columns.length; i++) &#123;</span><br><span class="line">                System.out.print(result.getObject(columns[i]) + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
主函数调用格式：  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">classname.getInfo(<span class="string">&quot;key1&quot;</span>,<span class="string">&quot;key2&quot;</span>,<span class="string">&quot;key3&quot;</span>,<span class="string">&quot;key4&quot;</span>);</span><br></pre></td></tr></table></figure></li>
<li>自定义插入<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnect();</span><br><span class="line">        String sql = <span class="string">&quot;insert  into  table values(?,?,?,?)&quot;</span>;</span><br><span class="line">        PreparedStatement preparedStatement = con.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setObject(<span class="number">1</span>, obj.getId());</span><br><span class="line">        preparedStatement.setObject(<span class="number">2</span>, obj.getEmpName());</span><br><span class="line">        preparedStatement.setObject(<span class="number">3</span>, obj.getDept_code());</span><br><span class="line">        preparedStatement.setObject(<span class="number">4</span>, obj.getHire_date());</span><br><span class="line">        preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(<span class="string">&quot;插入数据成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>自定义删除  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteObj</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnect();</span><br><span class="line">        String sql = <span class="string">&quot;delete from table where id = &quot;</span> + id;</span><br><span class="line">        PreparedStatement preparedStatement = con.prepareStatement(sql);</span><br><span class="line">        preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(<span class="string">&quot;删除成功。&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>自定义更改<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">altObj</span><span class="params">(<span class="keyword">int</span> id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        Connection con = JdbcUtils.getConnect();</span><br><span class="line">        System.out</span><br><span class="line">                .println(<span class="string">&quot;输入要更改的键,可选: key1,key2,key3,key4,&quot;</span>);</span><br><span class="line">        String column = sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;将修改&quot;</span> + column + <span class="string">&quot;为:&quot;</span>);</span><br><span class="line">        String alt = sc.next();</span><br><span class="line">        String sql = <span class="string">&quot;update table set &quot;</span> + column + <span class="string">&quot; = ? where id = ?&quot;</span>;</span><br><span class="line">        PreparedStatement preparedStatement = con.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setObject(<span class="number">1</span>, alt);</span><br><span class="line">        preparedStatement.setObject(<span class="number">2</span>, id);</span><br><span class="line">        preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(<span class="string">&quot;更改成功。&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Scanner中文输入乱码问题</title>
    <url>/JavaScanner%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>&emsp;&emsp;最近在做Java项目时遇到了一个问题：在使用JDBC向MySQL数据库中插入数据时中文值会变成乱码，但是从数据库中查询数据时中文显示正常。因此乱码产生原因应该在输入过程。<a id="more"></a><br>&emsp;&emsp;推测原因是使用Scanner类创建的输入流输入中文时编码转换产生错误。<br>示例代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String sc_str = sc.next();</span><br><span class="line">        String def_str = <span class="string">&quot;你好。&quot;</span>;</span><br><span class="line">        System.out.println(sc_str + def_str);</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>示例结果如下<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2021/01/10/965cc00b946b92e2cd6edda6bd44f6b5.png" alt="示例结果"><br>&emsp;&emsp;可以看到输入的中文变成了乱码，但是预定义的字符串可以正常输出，因此确定是输入时编码存在问题。键盘的输入流的默认格式是GBK格式，控制台的字符编码以及文件编码均为UTF-8，因此造成了乱码。<br>&emsp;&emsp;解决：更改代码<code>Scanner sc = new Scanner(System.in);</code>在实例化Scanner对象时指定编码类型为GBK，即<code>Scanner sc = new Scanner(System.in, &quot;GBK&quot;);</code>。<br>&emsp;&emsp;更改后程序中文输入即可正常编码：<br><img src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2021/01/10/1196c7ba8fefab51f1ced83e211d0b27.png" alt="更改后"><br>&emsp;&emsp;备注：更改IDE为IntelliJ IDEA时无此问题，果然还是IDEA省事。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>V2Ray相关</title>
    <url>/V2Ray/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码不对。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="df15a95313279e344c06d12c7c348163d87f3da8c4f5c92482f2950bb581a9f4">bb19e3588e7440443573af731f63596e23e45afaadfcbdf14ee0d1a56dcac13f7a96fbc7586ba0a9b05c4a9bb33935497cec02c413e5d6ead894477f67f49138c55e51b9dd8c657198c490330a2027f2845352f01902f16013e930598fa924afc85695f955fe00d8d9528b3a15cf4fdfcd3c6678366038e0a116e8738a0486c29b11f20dba9ef654134880e407f8c40c1f882f04815f9e85078a7237c942091470c50c63887b88cc7e748137e7015c0f1ae69af276d11faf3729d104d0f420f191c3337c3d92e8d64b1068c337f5688e338c67b5e301e5b0bc32f990c0adb2bee487219851105fb4b3cd2e23aba36a879479fccd0f7c1b5aeb5fd39dde8c3f1ec90755157f7738903b7595e6c82bd61bd528683b8dabc09f368353a3eca4c2a1a61c519879dda2b4f5397806a21dd33dbb78e4f5b5886cbcabaf374ff0c8f633d8cba7f251a6a47bbf153155028a8c91647278417281a32bd934d0b6148b3087f0212fa71596474b4c6c84e21f2650c3614c5e3ada803d56aaf420daf37fbbd51f829a50cfc15fe30405827397aa27040cc8ce88ed7f2a588b1b71857c7d0f0dd81486c84f76e03f54be92fc1a2809f564d32a2ba2c92e73ad1bfc51159555155590d8130302f27d324d032772cb9bd917346c0c0aaf270b57195c8f40533235c5a6fafb64fcd33476768a6efa5c314eced90f70bd5a2377c6a425faba0e260e88c0a6d903646a9e64c2e3247f2d8aef495dc452ab4cc23b3c7fcc7cd4d9edc22aacb1638d18898a0fe2c628451361146717ee2fb1e83a8c257d9b3be6d84e2b7978a1294d6757232c079b976a29657d3a6b144ee9164da6ef9216dfbca6ae51f2bb4283b58afd91903bfd61433adefa83710f053b471321987de8883dec44fcfa73c0fb80d022d85deeddca78222465c1f2d403d53afe2ab2fb222c2bf1e410f7d820b3572e2ec3861496b9e175de155513d7b02c7e95e5167f02b138faa6c94984c995d11010607bb4dc3373875a1ca8a20f8010c983b0c6a0383359bd022d4f7e6c50c2befda9f2e2faac2b1e64f5b814ea25cbd4423e90444323f3d5e85c624a7f899e81e8d369d53f5372b2c6d20b3c4ed419e02ae57f00987ee698a4d42b807f01c9d453401ddf59b0a9b9cfa124ede967178737cb3a3a492ac9952efa2e22d145e6e63ba4454a9fdbeb314c9518d2f89e0309af496a2134586ce914d0c8afa5438debfd2535e96b53e8c5a546cc1279f335fbc9871c6ae1a34cb4e3b2ff83cd3ffd99cbbb679209ac2c3134cc9887c8c52483177fc8910c6532cc33d41b10806b11dee602de9a8a0570dda1741f4fc4674baac0d791d5d04cad682c28c7753db38513d60599965311bbb131d82262450c6286bdd16a7864660966135555c17f5a3ee2e37c0a176caf7d4a766b1d2cb49245232b9638e911bde8cdd38a6c5514a539a338b0c29599cac65a9f2cb919b1aad9081239c3ffe07779d166a6619fb254d7bae9b83e8ae5b5d0c10b03efe0fffb887edd849070eec92fbe018860085af7c4ea279be92d1c275ca9c366ed81866c132e41c6961ba4a49954d1c72fdc45a0c70ad4d27ff51fbe7c9438b3cbf87a62541c9beaacb6832faccc75babd048d4948fff26d7e6cee0b8b6d150ff1f7c7a483c5feec684761b71113f9ae739a8c889b41ab810ff90dd6d7d66168c54394ee5b38f170cde41573456ab3cc24971c386cb77fda26969c2e390b0a13245b4f5f2b2824041ed600ef656b09390fef38db9c55b3d2e7b9d2c5221a8e64cfec2ea04d7f128715df245d488b27fbbf9c581ada00cf5320f5ee818179cc54f9c2e59a4a99911970d2fe5aa3b8a9576ca7c4646a34254688ca71cec000afdead5237a8f09ab295fe6e5e6231148eda337bbc6dad7a731c97e5e73161eff40ee164c68d2e5211f9e3b7a278d9dbe55af9f63cfc8d34462d5a164c543ae763aef265588d082950bb8d85dfdfaf5cdb46e294366df1428c1c07b57cb9963ed91b241c02a25be6fa14a430b257662c33077506c8df89776e7d8594e9da10a5da8d2bf0b465785d7e97b634cd25da1d8c59fef45e545f0571e03a7689b90f4bb6c495fd6ea575964ea2827fdff27b6437fe473bec123695e1a5a410bfd9144aa41685e2aa00eb5be999b651438f5a42be6f0db5a6350d8038356e12abbfc084150f373dcdaf5aaea846320f44fe38c8abd2abd2b57917a57a1227671fd68382f4321bf29d164165424bf2ce07933afef73d8ce709927e4e39f41cd4454a27d65bda4b234b2231bd791b94bb319408f80bef324e2ffd06fd8002d8c118a3037bf496f3f54aed5b50e5a7eb71be7436396ebf6c22c3cae653d2c63d6d735cd869b26e2079f76864b9696404a2121c7a698faff7c1be15c0256eaaf76ed32ca35d27da620a6d66d3da1e82cfd19c247ea63e276c4bd0841bb5d982068318b12ba741d5f19e4f1303d5db245be09af01d5bd731c8a8c1a600f7c24bbf7e37d2c6ee4d3070771a6b5737c269a6068a58937dd87f62b3778f0fd7233ece5b01dc82bd3518e72685eca311da0c56aaca052a6ce81c5a04a76047b1bfcba68117613ecf25efe562d5f4c6b9b6474c8a4061ba4af0e55efe8466eb76a4eff23933bd28891d0189900522c62fc396581115075bb33f4c401e5982d27291105d6bf61d41ffd617a5f242a65b76b1ea780f8c86061d445f9fd8afd68137fb645dc8fde89133744fc5048143bb6b091a10b5519c9cf9646996b8af1220f212c971c6e10ba8f5a25acdbc961a5d33920011a792bab1ccd77ab708495ee11a8643d35658a51a0da664998c9b1b386ab0d2db6cb3d8dfaf58586319f868e4803a2939762b54be27ab5427c83b9882b1c87150494afd030a9b5a0bfdb9549956c0bbf9913167b04ab32ea833e0e0d405eb0e8c17d46d2d0e23658edd8e13822c5f5da691571ea3414570880b72d01e37d76ab29c123fffb4679d9611e44a38e053c295c7211e825d4b216065b5df8744357aac165b5345f94a67c16683ca9f20f2a76280010b0e40f7259bb8b0fc27ec4a469d74b8a963659ff724c495395229d58ad76524b8a8bef23ac320fdb309de43cf06e4235c9f5fd1c6cbafc3f332060fee7da782163c0222c824eb0e8cff16b3c73539ae735afd4fd60b6e5636ca67c93ca60912e1e747b0aa54db37cb06618c21eae7ce0d7d0f8d0ba4b996fa8c68ca5538d8d471b17c54522d35f870ab46dad22514f41cf3322d7d5b57a0502b0e16349ae1de371490c091d2776007e5429fa48fb0d60872ce9219a92f12c7d0707ec411b23054910324d75d2dc91c413259b127787473ebd5cc7550b064d744cdda556f6b51c44ace01ed08dd149c64e6d2e773e700d7e10ade2346d5dbc0d56900b311021de7cb8c76bd8fee929eae9587b6f9114266046e725e0a229f67d71fa0371fbf96af14d1a1a2394ae89598a9cb11458df3585b6da8a41cfa06fad2ec22d0871aa1d02d19b22f234f4695ceb3d54b54e5668bce0d24cee54cda3d5c9980cae37793ba252ef195301e62bb19a1afd7778f87ea683912eb9b128ecc9cbb313a9d8810ab597f7243e8e38099b755cc9c75600e17640d3fb99bcd1dc104d8d0ff446c9cfa2cba50aeac46399b77e052cde81d6f4fb78e8936dc8a9874755ccfd30b54bb22b70a1d96ba390d53b23873631a300d45fe06c3a1682984cb2788e0afdffcb4cd7bf28ac37c7b0de5442518265ab3c0ea534d6fa9c86fde4a12500ee9602ae0ca195e7c33</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">密码？</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>不正经研究</category>
      </categories>
      <tags>
        <tag>V2Ray</tag>
        <tag>Encrypted</tag>
      </tags>
  </entry>
</search>
